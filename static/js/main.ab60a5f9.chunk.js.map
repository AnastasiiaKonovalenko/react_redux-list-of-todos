{"version":3,"sources":["api/todosApi.js","api/usersApi.js","store.js","App.js","index.js"],"names":["getTodos","fetch","then","response","json","catch","getUsers","store","createStore","state","action","type","Object","objectSpread2","isLoading","hasError","todos","filter","item","id","payload","App","loadData","_this$props","startLoad","handleOk","_ref","_ref2","todosFromServer","usersFromServer","regenerator_default","a","async","_context","prev","next","_this","props","awrap","Promise","all","sent","slicedToArray","map","todo","user","find","person","userId","stop","_this$props2","this","handleDeleteTodo","react_default","createElement","className","key","title","completed","name","email","onClick","Fragment","React","Component","connect","dispatch","handleSuccess","peyload","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ab60a5f9.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/todos';\nconst getTodos = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getTodos;\n","const URL = 'https://jsonplaceholder.typicode.com/users';\nconst getUsers = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getUsers;\n","import { createStore } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleSuccess = todos => ({\n  type: HANDLE_SUCCESS, todos,\n});\n\nexport const handleDelete = payload => ({\n  type: DELETE_TODO, payload,\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: true,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(item => item.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, {\n  isLoading: false,\n  hasError: false,\n  todos: [],\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getTodos from './api/todosApi';\nimport getUsers from './api/usersApi';\nimport {\n  startLoading,\n  handleSuccess,\n  handleDelete,\n} from './store';\n\nclass App extends React.Component {\n   loadData = async() => {\n     const { startLoad, handleOk } = this.props;\n\n     startLoad();\n\n     const [\n       todosFromServer,\n       usersFromServer,\n     ] = await Promise.all([\n       getTodos(),\n       getUsers(),\n     ]);\n\n     handleOk(todosFromServer.map(todo => (\n       {\n         ...todo,\n         user: usersFromServer.find(person => person.id === todo.userId),\n       })));\n   };\n\n   render() {\n     const { todos, isLoading, handleDeleteTodo } = this.props;\n\n     return (\n       isLoading\n         ? (\n           <section>\n             <h1>Dynamic list of todos</h1>\n             <div className=\"App\">\n               <table>\n                 <thead>\n                   <tr>\n                     <th className=\"click\">\n                       Id\n                     </th>\n                     <th className=\"click\">\n                       Title\n                     </th>\n                     <th className=\"click\">\n                       Status\n                     </th>\n                     <th className=\"click\">\n                       User Name\n                     </th>\n                     <th className=\"click\">\n                       User Email\n                     </th>\n                   </tr>\n                 </thead>\n                 <tbody>\n                   {/* eslint-disable-next-line react/prop-types */}\n                   {todos.map(todo => (\n                     <tr key={todo.id}>\n                       <td>{todo.id}</td>\n                       <td>{todo.title}</td>\n                       <td>\n                         {todo.completed === true\n                           ? 'completed'\n                           : 'no completed'}\n                       </td>\n                       <td>\n                         {todo.user.name}\n                       </td>\n                       <td>\n                         {todo.user.email}\n                       </td>\n                       <td>\n                         <button\n                           type=\"button\"\n                           onClick={() => handleDeleteTodo(todo.id)}\n                         >\n                           Delete\n                         </button>\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </table>\n             </div>\n           </section>\n         ) : (\n           <>\n             <button\n               type=\"button\"\n               onClick={this.loadData}\n             >\n               Load todos\n             </button>\n           </>\n         )\n     );\n   }\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startLoad: () => dispatch(startLoading()),\n  handleOk: todos => dispatch(handleSuccess(todos)),\n  handleDeleteTodo: peyload => dispatch(handleDelete(peyload)),\n});\n\nApp.propTypes = {\n  startLoad: PropTypes.func.isRequired,\n  handleOk: PropTypes.func.isRequired,\n  handleDeleteTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}