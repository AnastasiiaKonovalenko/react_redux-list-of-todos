{"version":3,"sources":["api/todosApi.js","api/usersApi.js","store.js","api/components/todoList.js","App.js","index.js"],"names":["getTodos","fetch","then","response","json","catch","getUsers","handleDelete","payload","type","store","createStore","state","action","Object","objectSpread2","isLoading","hasError","todos","filter","item","id","connect","dispatch","handleDeleteTodo","peyload","_ref","react_default","a","createElement","Fragment","map","todo","key","title","completed","user","name","email","onClick","App","loadData","_this$props","startLoad","handleOk","_ref2","todosFromServer","usersFromServer","regenerator_default","async","_context","prev","next","_this","props","awrap","Promise","all","sent","slicedToArray","find","person","userId","stop","_this$props2","this","className","todoList","React","Component","handleSuccess","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.21d3111c.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/todos';\nconst getTodos = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getTodos;\n","const URL = 'https://jsonplaceholder.typicode.com/users';\nconst getUsers = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getUsers;\n","import { createStore } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleSuccess = todos => ({\n  type: HANDLE_SUCCESS, todos,\n});\n\nexport const handleDelete = payload => ({\n  type: DELETE_TODO, payload,\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: true,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(item => item.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, {\n  isLoading: false,\n  hasError: false,\n  todos: [],\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  handleDelete,\n} from '../../store';\n\nconst TodoList = ({ todos, handleDeleteTodo }) => (\n  <>\n    {todos.map(todo => (\n      <tr key={todo.id}>\n        <td>{todo.id}</td>\n        <td>{todo.title}</td>\n        <td>\n          {todo.completed === true\n            ? 'completed'\n            : 'no completed'}\n        </td>\n        <td>\n          {todo.user.name}\n        </td>\n        <td>\n          {todo.user.email}\n        </td>\n        <td>\n          <button\n            type=\"button\"\n            onClick={() => handleDeleteTodo(todo.id)}\n          >\n              Delete\n          </button>\n        </td>\n      </tr>\n    ))}\n  </>\n);\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDeleteTodo: peyload => dispatch(handleDelete(peyload)),\n});\n\nTodoList.propTypes = {\n  handleDeleteTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getTodos from './api/todosApi';\nimport getUsers from './api/usersApi';\nimport {\n  startLoading,\n  handleSuccess,\n  handleDelete,\n} from './store';\nimport TodoList from './api/components/todoList';\n\nclass App extends React.Component {\n   loadData = async() => {\n     const { startLoad, handleOk } = this.props;\n\n     startLoad();\n\n     const [\n       todosFromServer,\n       usersFromServer,\n     ] = await Promise.all([\n       getTodos(),\n       getUsers(),\n     ]);\n\n     handleOk(todosFromServer.map(todo => (\n       {\n         ...todo,\n         user: usersFromServer.find(person => person.id === todo.userId),\n       })));\n   };\n\n   render() {\n     const { todos, isLoading } = this.props;\n\n     return (\n       isLoading\n         ? (\n           <section>\n             <h1>Dynamic list of todos</h1>\n             <div className=\"App\">\n               <table>\n                 <thead>\n                   <tr>\n                     <th className=\"click\">\n                       Id\n                     </th>\n                     <th className=\"click\">\n                       Title\n                     </th>\n                     <th className=\"click\">\n                       Status\n                     </th>\n                     <th className=\"click\">\n                       User Name\n                     </th>\n                     <th className=\"click\">\n                       User Email\n                     </th>\n                   </tr>\n                 </thead>\n                 <tbody>\n                   <TodoList todos={todos} />\n                 </tbody>\n               </table>\n             </div>\n           </section>\n         ) : (\n           <>\n             <button\n               type=\"button\"\n               onClick={this.loadData}\n             >\n               Load todos\n             </button>\n           </>\n         )\n     );\n   }\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startLoad: () => dispatch(startLoading()),\n  handleOk: todos => dispatch(handleSuccess(todos)),\n  handleDeleteTodo: peyload => dispatch(handleDelete(peyload)),\n});\n\nApp.propTypes = {\n  startLoad: PropTypes.func.isRequired,\n  handleOk: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}